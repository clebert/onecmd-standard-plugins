import type {Plugin} from 'onecmd';
import {ObjectFile} from '../files/object-file';
import {isObject} from '../predicates/is-object';
import {serializeYaml} from '../serializers/serialize-yaml';

export interface GithubPluginOptions {
  readonly branches?: readonly string[];
  readonly nodeVersion?: string;
  readonly omitReleaseStep?: boolean;
  readonly runner?: string;
}

const ciFile = new ObjectFile({
  path: `.github/workflows/ci.yml`,
  attrs: {pretty: true, versioned: true, visible: true},
  is: isObject,
  serialize: (content) =>
    `# This file is generated by @onecmd/standard-plugins.\n${serializeYaml(
      content,
    )}`,
});

export const github = ({
  branches = [`main`],
  nodeVersion = undefined,
  omitReleaseStep = false,
  runner = `ubuntu-latest`,
}: GithubPluginOptions = {}): Plugin => ({
  setup: () => [
    ciFile.new(() => ({
      name: `CI`,
      on: {
        push: {branches},
        pull_request: {branches},
        ...(!omitReleaseStep ? {release: {types: [`published`]}} : {}),
      },
      jobs: {
        ci: {
          'runs-on': runner,
          'steps': [
            {name: `Checkout repository`, uses: `actions/checkout@v2`},
            {
              name: `Setup Node.js`,
              uses: `actions/setup-node@v2`,
              ...(nodeVersion ? {with: {'node-version': nodeVersion}} : {}),
            },
            {name: `Install dependencies`, uses: `bahmutov/npm-install@v1`},
            {name: `Run CI checks`, run: `npm run ci`},
            ...(!omitReleaseStep
              ? [
                  {
                    name: `Publish to npm`,
                    if: `\${{ github.event_name == 'release' }}`,
                    env: {NPM_AUTH_TOKEN: `\${{ secrets.NPM_AUTH_TOKEN }}`},
                    run: `npm config set //registry.npmjs.org/:_authToken $NPM_AUTH_TOKEN\nnpm publish\n`,
                  },
                ]
              : []),
          ],
        },
      },
    })),
  ],
});

github.ciFile = ciFile;
